{{- if .Values.webScheduler.installWebServer -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "airflow.webserver.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "airflow.name" . }}
    app: {{ template "airflow.name" . }}
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "airflow.name" . }}
      app: {{ template "airflow.name" . }}
      tier: {{ .Values.webScheduler.web.name }}
  replicas: {{ .Values.webScheduler.web.webReplicaCount }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cfgmap-airflow-cfg.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ template "airflow.name" . }}
        app: {{ template "airflow.name" . }}
        tier: {{ .Values.webScheduler.web.name }}
    spec:
      restartPolicy: Always
      serviceAccountName: {{ .Values.webScheduler.serviceAccountName }}
      initContainers:
      - name: seed-users
        image: {{ .Values.webScheduler.image }}:{{ .Values.webScheduler.tag }}
        env:
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets.name }}
                key: {{ .Values.secrets.key.sqlAlchemyConn }}
          - name: AIRFLOW__CORE__FERNET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secrets.name }}
                key: {{ .Values.secrets.key.fernetKey }}
        volumeMounts:
        - name: {{ .Values.webScheduler.airflowCfgConfigMap }}
          mountPath: {{ .Values.webScheduler.airflowCfgPath }}
          subPath: airflow.cfg
        command: ["/bin/sh","-c",
                 "airflow users --create --username eamon --lastname keane --firstname eamon --email eamon@logistio.ie --role Admin --password test;
                 airflow connections --add --conn_id=google_logs --conn_type=google_cloud_platform --conn_extra='{\"extra__google_cloud_platform__project\": \"icabbi-202810\", \"extra__google_cloud_platform__scope\": \"https://www.googleapis.com/auth/cloud-platform\"}'"]
      containers:
        - name: {{ template "airflow.webserver.fullname" . }}
          image: {{ .Values.webScheduler.image }}:{{ .Values.webScheduler.tag }}
          imagePullPolicy: {{ .Values.webScheduler.imagePullPolicy }}
          ports:
            - name: {{ .Values.webScheduler.web.name }}
              containerPort: 8080
          volumeMounts:
          - name: {{ .Values.webScheduler.airflowCfgConfigMap }}
            mountPath: {{ .Values.webScheduler.airflowCfgPath }}
            subPath: airflow.cfg
          - name: airflow-logs
            mountPath: /etc/google
          env:
           - name: SQL_ALCHEMY_CONN
             valueFrom:
               secretKeyRef:
                 name: {{ .Values.secrets.name }}
                 key: {{ .Values.secrets.key.sqlAlchemyConn }}
           - name: AIRFLOW__CORE__FERNET_KEY
             valueFrom:
               secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.key.fernetKey }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8080
          #   initialDelaySeconds: 20
          #   timeoutSeconds: 30
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 8080
          #   initialDelaySeconds: 20
          #   timeoutSeconds: 30
          args: ["webserver"]
          resources:
{{ toYaml .Values.webScheduler.web.resources | indent 12 }}
    {{- with .Values.webScheduler.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ .Values.webScheduler.airflowCfgConfigMap }}
          configMap:
            name: "{{ .Values.webScheduler.airflowCfgConfigMap }}"
        - name: airflow-logs
          secret:
            secretName: airflow
{{- end -}}