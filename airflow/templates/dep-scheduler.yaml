{{- if .Values.webScheduler.installScheduler -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "airflow.scheduler.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "airflow.name" . }}
    app: {{ template "airflow.name" . }}
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "airflow.name" . }}
      app: {{ template "airflow.name" . }}
      tier: {{ .Values.webScheduler.scheduler.name }}
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cfgmap-airflow-cfg.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ template "airflow.name" . }}
        app: {{ template "airflow.name" . }}
        tier: {{ .Values.webScheduler.scheduler.name }}
    spec:
      restartPolicy: Always
      serviceAccountName: {{ .Values.webScheduler.scheduler.serviceAccountName }}
      containers:
        - name: {{ template "airflow.webserver.fullname" . }}
          image: {{ .Values.webScheduler.image }}:{{ .Values.webScheduler.tag }}
          imagePullPolicy: {{ .Values.webScheduler.imagePullPolicy }}
          volumeMounts:
          - name: {{ .Values.webScheduler.airflowCfgConfigMap }}
            mountPath: {{ .Values.webScheduler.airflowCfgPath }}
            subPath: airflow.cfg
          env:
           - name: SQL_ALCHEMY_CONN
             valueFrom:
               secretKeyRef:
                 name: {{ .Values.secrets.name }}
                 key: {{ .Values.secrets.key.sqlAlchemyConn }}
           - name: AIRFLOW__CORE__FERNET_KEY
             valueFrom:
               secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.key.fernetKey }}
{{- if .Values.airflowCfg.core.remoteLogging }}
           - name: AIRFLOW__CORE__REMOTE_BASE_LOG_FOLDER
             value: {{ .Values.googleLogBucket }}
{{ end }}
          args: ["scheduler"]
          resources:
{{ toYaml .Values.webScheduler.scheduler.resources | indent 12 }}
    {{- with .Values.webScheduler.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ .Values.webScheduler.airflowCfgConfigMap }}
          configMap:
            name: "{{ .Values.webScheduler.airflowCfgConfigMap }}"
{{- end -}}