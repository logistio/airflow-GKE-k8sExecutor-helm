{{- if .Values.webScheduler.preHook.install -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "prehook-airflow"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    app.kubernetes.io/name: {{ template "airflow.name" . }}
    app: {{ template "airflow.name" . }}
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      volumes:
        - name: "{{ .Values.webScheduler.airflowCfgConfigMap }}"
          configMap:
            name: "{{ .Values.webScheduler.airflowCfgConfigMap }}"
      {{if and .Values.google.enabled .Values.webScheduler.preHook.initContainer -}}
      initContainers:
      - name: check-db-ready
        image: postgres:9.6.5
        command: ['sh', '-c', 
          'until pg_isready -h "{{ template "airflow.postgresql.fullname" . }}" -p 5432; 
          do echo waiting for database; sleep 2; done;']
      {{ end -}}
      containers:
       - name: "pre-hook-migration"
         image: {{ .Values.webScheduler.image }}:{{ .Values.webScheduler.tag }}
         imagePullPolicy: {{ .Values.webScheduler.imagePullPolicy }}
         args: [{{ .Values.webScheduler.preHook.args }}]
         volumeMounts:
          - name: "{{ .Values.webScheduler.airflowCfgConfigMap }}"
            mountPath: {{ .Values.webScheduler.airflowCfgPath }}
            subPath: airflow.cfg
         env:
           - name: SQL_ALCHEMY_CONN
             valueFrom:
               secretKeyRef:
                 name: {{ .Values.secrets.name }}
                 key: {{ .Values.secrets.key.sqlAlchemyConn }}
           - name: AIRFLOW__CORE__FERNET_KEY
             valueFrom:
               secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: {{ .Values.secrets.key.fernetKey }}
{{- end -}}